name: Deploy Client Code

on:
  push:
    branches:
      - main

env:
  SSH_HOST: 70.34.195.182 # ${{ secrets.SSH_HOST }}
  SSH_USERNAME: root # ${{ secrets.SSH_USERNAME }}
  SSH_PASSWORD: .a9Ld?fwUz)Je-N? # ${{ secrets.SSH_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '23.1.0'

    - name: Install api dependencies
      run: |
        cd nodejs
        npm install

    - name: Install dependencies and build client code
      env: 
        REACT_APP_MOBIILILINJA_BASE_URL: https://pabx.mobiililinja.fi/v1
        REACT_APP_MOBIILILINJA_FILE_BASE_URL: https://pabx.mobiililinja.fi/
        REACT_APP_MOBIILILINJA_LOGIN: /user/login
        REACT_APP_MOBIILILINJA_SIDEBAR: /sidebar
        REACT_APP_CONTACT_LIST_API: /user/contact/list
        REACT_APP_CONVERSATION_API: /conversation
        REACT_APP_FILE_UPLOAD: https://pabx.mobiililinja.fi/v1/upload
        REACT_APP_FILE_BASE_URL: https://pabx.mobiililinja.fi/
        REACT_APP_NEW_CONVERSATION: /company/user/list
        REACT_APP_GROUP_LIST_USER: /group/details
        REACT_APP_FORWARD_LIST: /user/forward/list
        REACT_APP_COMPANY_LIST: /company/list
        REACT_APP_IVR_LIST: /ivr/list
        REACT_APP_GET_COMPANY_DETAIL: /company/detail
        REACT_APP_EDIT_COMPANY: /company/edit
        REACT_APP_ADD_COMPANY: /company/add
        REACT_APP_DELETE_COMPANY: /company/delete
        REACT_APP_FIREWALLLIST: /firewall/list
        REACT_APP_WhatsappConversation: /whatsapp/wp-conversation/company
        REACT_APP_FACEBOOK_BASE_URL: https://graph.facebook.com/v20.0/378441851999607
        REACT_APP_ACCESSTOKEN: EAAaKy9XEVsMBOwqM5Edj5ZBYuM2XUYsDoZBFXuOBjn5j1rsZCJoZAa5LtIXRKcm735ubGrd2G1sxzNume80SjZBvXoMaAMw5JnqfZBMVncL3gPPdAqAa0hRDhtoVmfYVMuG23lITTcuVifZAgZAOerzZBK0SbIztoyrdcvBdF3SOOChCRZATFBru8EzN9vK0GqQbB65GYkhqmo7jPBM0yd
        REACT_APP_PBX_API_BASE_URL: https://mobile.mobiililinja.fi/webapi/core
        REACT_APP_ADD_RECORDING_API: /recording/create.php
        REACT_APP_UPDATE_RECORDING_API: /recording/update.php
        REACT_APP_VOIP_USERNAME: apiuser
        REACT_APP_VOIP_PASSWORD: d6kVImEEV1A34B2fjduZpxxFAf4
        REACT_APP_CRD_BY_UUID: https://mobile.mobiililinja.fi/webapi/core/cdr/fetch_by_domain.php
        REACT_APP_WHATSAPP_URL: https://pabx.mobiililinja.fi/v1/whatsapp/webhook
        REACT_APP_WHATSAPP_VERIFY_TOKEN: Test Celloip

        REACT_APP_API_BASE_URL: https://pabx.mobiililinja.fi/v1/
      run: |
        cd client
        npm install
        npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: client-build
        path: client/build

  upload-client:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: client-build
        path: client/build
    
    - name: Upload client
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        password: ${{ env.SSH_PASSWORD }}
        source: "client/build/*"
        target: "/var/www/html/"
        overwrite: true

  upload-api:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Verify files
      run: |
        ls -la nodejs/package-lock.json
        ls -la nodejs/package.json

    - name: Upload api
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        password: ${{ env.SSH_PASSWORD }}
        source: "nodejs/src,package-lock.json,nodejs/package.json,nodejs/mobininja_backend.ts,nodejs/tsconfig.json"
        target: "/var/www/html/"
        overwrite: true

    # - name: Upload api dependencies files
    #   uses: appleboy/scp-action@master
    #   with:
    #     host: ${{ env.SSH_HOST }}
    #     username: ${{ env.SSH_USERNAME }}
    #     password: ${{ env.SSH_PASSWORD }}
    #     source: "nodejs/package-lock.json,nodejs/package.json,nodejs/mobininja_backend.ts,nodejs/tsconfig.json"
    #     target: "/var/www/html/nodejs/"
    #     overwrite: true
      

  upload-proxysocket:
    # needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Upload proxysocket
      uses: appleboy/scp-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        password: ${{ env.SSH_PASSWORD }}
        source: "proxysocket/src,proxysocket/package-lock.json,proxysocket/package.json,proxysocket/mobininja_socket.ts,proxysocket/tsconfig.json"
        target: "/var/www/html/"
        overwrite: true

    # - name: Upload proxysocket dependencies files
    #   uses: appleboy/scp-action@master
    #   with:
    #     host: ${{ env.SSH_HOST }}
    #     username: ${{ env.SSH_USERNAME }}
    #     password: ${{ env.SSH_PASSWORD }}
    #     source: "proxysocket/package-lock.json,proxysocket/package.json,proxysocket/mobininja_socket.ts,proxysocket/tsconfig.json"
    #     target: "/var/www/html/proxysocket/"
    #     overwrite: true

  installation-api:
    needs: upload-api
    runs-on: ubuntu-latest

    steps:
    - name: install api dependencies
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        password: ${{ env.SSH_PASSWORD }}
        script: |
          cd /var/www/html/nodejs
          npm i

  installation-proxysocket:
    needs: upload-proxysocket
    runs-on: ubuntu-latest

    steps:
    - name: install proxysocket dependencies
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        password: ${{ env.SSH_PASSWORD }}
        script: |
          cd /var/www/html/proxysocket
          npm i

  restart:
    needs: [upload-client, installation-api, installation-proxysocket]
    runs-on: ubuntu-latest

    steps:
    - name: Restart server with pm2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        username: ${{ env.SSH_USERNAME }}
        password: ${{ env.SSH_PASSWORD }}
        script: |
          pm2 --update-env restart mobininja_socket
          pm2 --update-env restart mobininja_backend
          pm2 --update-env restart node-ts