<?php
    require("../../config/config.php");

    class Conference {

        public function verify_user($con, $username, $password) {
            $query = "SELECT * FROM public.v_users WHERE username = '$username'";
            $result = pg_query($con,$query);
            $admin = pg_fetch_array($result);
        
            if (!empty($admin)) {
                if (password_verify($password, $admin['password'])) {
                    $data = json_encode([
                        'msg' => 'true',
                        'id' => $admin['user_uuid']
                    ]);
                    return $data;
                } else {
                    $data = json_encode([
                        'msg' => 'false',
                    ]);
                    return $data;   
                }
                
            } else {
                $data = json_encode([
                    'msg' => 'false',
                ]);
                return $data;
            }
        }
        
        public function fetch($con) {
            $query = 'SELECT * FROM public.v_conferences
            JOIN public.v_domains
            ON v_conferences.domain_uuid = v_domains.domain_uuid';
            $result = pg_query($con, $query);
            return $result;
        }
// Date :8/8/24 Added by Atul for conference profile 
	public function fetch_conference_profile($con) {
            $query = 'SELECT * FROM public.v_conference_profiles';
            $result = pg_query($con, $query);
            return $result;
        }

// END 

        public function fetch_by_id($con, $id) {
            $query = "SELECT * FROM public.v_conferences
            JOIN public.v_domains
            ON v_conferences.domain_uuid = v_domains.domain_uuid
            WHERE v_conferences.conference_uuid = '$id'";
            $result = pg_query($con, $query);
            return $result;
        }

        public function fetch_by_domain($con, $id) {
            $query = "SELECT * FROM public.v_conferences
            JOIN public.v_domains
            ON v_conferences.domain_uuid = v_domains.domain_uuid
            WHERE v_conferences.domain_uuid = '$id'";
            $result = pg_query($con, $query);
            return $result;
        }

        // public function post($con, $name, $domain_name, $extension, $pin_number, $description, $conference_enabled, $uuidConference, $userID) {
// Date : 08-08-24 Added by Atul for add conferece field
        public function post($con, $name, $domain_name, $extension, $pin_number, $description, $conference_enabled, $uuidConference, $userID,$conference_profile,$conference_flags,$conference_account_code,$conference_context) {
            if (empty(trim($name))) {
                echo json_encode([
                    "msg"     => 'Name cannot be EMPTY !'
                ]);
                return;
            } elseif (empty(trim($extension))) {
                echo json_encode([
                    "msg"     => 'Extension cannot be EMPTY !'
                ]);
                return;
            } elseif (empty(trim($pin_number))) {
                echo json_encode([
                    "msg"     => 'Pin Number cannot be EMPTY !'
                ]);
                return;
            } elseif (empty(trim($description))) {
                echo json_encode([
                    "msg"     => 'Description cannot be EMPTY !'
                ]);
                return;
            } elseif (empty(trim($domain_name))) {
                echo json_encode([
                    "msg"     => 'Please Select Domain !'
                ]);
                return;
            }

            // $userID = '3d7c90a5-3936-422a-8fac-4dbfbea35237';
            //$insertConference = "INSERT INTO public.v_conferences (conference_uuid, domain_uuid, conference_name, conference_extension, conference_pin_number, conference_profile, conference_order, conference_description, conference_enabled, insert_user) VALUES ('$uuidConference', '$domain_name', '$name', '$extension', '$pin_number', 'default', 0, '$description', '$conference_enabled', '$userID')";
 // Date :08-08-24 Added by Atul for add conference addtional field

            $insertConference = "INSERT INTO public.v_conferences (conference_uuid, domain_uuid, conference_name, conference_extension, conference_pin_number, conference_profile, conference_order, conference_description, conference_enabled, insert_user,conference_flags,conference_account_code,conference_context) VALUES ('$uuidConference', '$domain_name', '$name', '$extension', '$pin_number', '$conference_context', 0, '$description', '$conference_enabled', '$userID','$conference_flags','$conference_account_code','$conference_context')";
            $resultConference = pg_query($con, $insertConference);
            if ($resultConference) {
                echo json_encode([
                    "msg"     => 'Conference Created Successfully !!',
                    "id"      => $uuidConference
                ]);
                return;
            } else {
                echo json_encode([

                    "msg"     => 'Failed to Create Conference, Try Again !!'
                ]);
                return;
            }    
        }

      //  public function update($con, $name, $extension, $pin_number, $description, $conference_enabled, $conference_id) {
		  // Date :08-08-24 Added by Atul for update conference additional field 
		   public function update($con, $name, $extension, $pin_number, $description, $conference_enabled, $conference_id,$conference_profile,$conference_flags,$conference_account_code,$conference_context) {
            if (empty(trim($name))) {
                echo json_encode([
                    "msg"     => 'Name cannot be EMPTY !'
                ]);
                return;
            } elseif (empty(trim($extension))) {
                echo json_encode([
                    "msg"     => 'Extension cannot be EMPTY !'
                ]);
                return;
            } elseif (empty(trim($pin_number))) {
                echo json_encode([
                    "msg"     => 'Pin Number cannot be EMPTY !'
                ]);
                return;
            } elseif (empty(trim($description))) {
                echo json_encode([
                    "msg"     => 'Description cannot be EMPTY !'
                ]);
                return;
            }

            $query = "UPDATE public.v_conferences SET 
            conference_name = '$name', 
            conference_extension = '$extension', 
            conference_pin_number = '$pin_number', 
            conference_description = '$description',
	    conference_profile = '$conference_profile',
	    conference_flags ='$conference_flags',
	    conference_account_code='$conference_account_code',
	    conference_context='$conference_context',
            conference_enabled = '$conference_enabled' WHERE conference_uuid = '$conference_id'";
            $updateConference = pg_query($con, $query);
            if ($updateConference) {
                echo json_encode([
                    "msg"     => 'Conference Updated Successfully !!'
                ]);
                return;
            } else {
                echo json_encode([

                    "msg"     => 'Failed to Update Conference, Try Again !!'
                ]);
                return;
            }    
        }

        public function delete($con, $id) {
            $checkDialplan = "SELECT * FROM public.v_conferences WHERE conference_uuid = '$id'";
            $resultCheckDialplan = pg_query($con, $checkDialplan);
            if (pg_num_rows($resultCheckDialplan) > 0) {
                $row = pg_fetch_assoc($resultCheckDialplan); 
                $dialplan_id = $row['dialplan_uuid'];
                $queryDeleteDialplan = "DELETE FROM public.v_dialplans WHERE dialplan_uuid = '$dialplan_id'";
                pg_query($con, $queryDeleteDialplan);
                $queryDeleteDialplanDetails = "DELETE FROM public.v_dialplan_details WHERE dialplan_uuid = '$dialplan_id'";
                pg_query($con, $queryDeleteDialplanDetails);
            }

            $query = "DELETE FROM public.v_conferences WHERE conference_uuid = '$id'";
            $result = pg_query($con, $query);
            if ($result) {
                echo json_encode([
                    "message" => "Conference Deleted Successfully !!"
                ]);            
                return;
            
            } else {
                echo json_encode([
                    "message" => "Failed to Delete Conference, Try Again !!"
                ]);            
                return;
            }
        }

    }
?>
